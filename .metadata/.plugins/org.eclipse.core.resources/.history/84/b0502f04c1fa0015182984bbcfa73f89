package com.cartographerapi.customgames;

import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.io.IOException;

public class CustomGameCountHandler implements RequestHandler<Gamertag, PlayerGameCounts> {
	
    @Override
    public PlayerGameCounts handleRequest(Gamertag input, Context context) {
        context.getLogger().log("Input: " + input.getGamertag());
		ObjectMapper mapper = new ObjectMapper();
        
        try {
			Halo5ApiWrapper api = new Halo5ApiWrapper("ae4df7c91357455ea30be2d7bdf15522");
			String totalResult = api.serviceRecord(input.getGamertag());
			JsonNode root = mapper.readTree(totalResult);
			Integer completedGames = root.path("Results").path(0).path("Result").path("CustomStats").path("TotalGamesCompleted").asInt();

			Integer lastGames = 25;
			Integer totalGames = completedGames;
			while (lastGames == 25) {
				String lastResult = api.customGames(input.getGamertag(), totalGames);
				root = mapper.readTree(lastResult);
				lastGames = root.path("ResultCount").asInt();
				totalGames += lastGames;
			}

			// TODO: Properly decode gamertag into actual string (`%20` or `+` is used instead of spaces)
			return new PlayerGameCounts(input.getGamertag(), completedGames, totalGames);
        } catch (JsonGenerationException exception) {
        	return new PlayerGameCounts(input.getGamertag(), 0, 0);
        } catch (JsonMappingException exception) {
        	return new PlayerGameCounts(input.getGamertag(), 0, 0);
        } catch (IOException exception) {
        	return new PlayerGameCounts(input.getGamertag(), 0, 0);
        }

    }

}