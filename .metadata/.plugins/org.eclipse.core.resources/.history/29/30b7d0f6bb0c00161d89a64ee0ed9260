package com.cartographerapi.domain.game;

import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.util.ArrayList;

import com.amazonaws.services.sqs.model.SendMessageRequest;
import com.amazonaws.services.sqs.model.DeleteMessageRequest;
import com.amazonaws.services.sqs.model.Message;
import com.amazonaws.services.sqs.AmazonSQSClient;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.io.IOException;

import com.cartographerapi.domain.game.Game;

/**
 * Writer repository for Games into an SQS queue.
 * 
 * @see GamesWriter
 * 
 * @author GodlyPerfection
 *
 */
public class GamesSqsWriter implements GamesWriter {

	private AmazonSQSClient client;
	private String queueUrl;
    private ObjectMapper mapper;

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Game saveGame(Game game) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Game> saveGames(List<Game> games) {
		SendMessageRequest sendMessageRequest = new SendMessageRequest();
		sendMessageRequest.QueueUrl = myQueueUrl; //URL from initial queue creation
		sendMessageRequest.MessageBody = "This is my message text.";
		sqs.SendMessage(sendMessageRequest);
		return null;
	}

    /**
     * The lazy IOC constructor.
     */
	public GamesSqsWriter(String queueUrlKey) {
		mapper = new ObjectMapper();
		JsonNode config = mapper.createObjectNode();
		try {
			config = mapper.readTree(getClass().getClassLoader().getResource("config.json"));
		} catch (IOException exception) {
		}

		this.queueUrl = config.path(queueUrlKey).asText();
		client = new AmazonSQSClient();
	}

}
