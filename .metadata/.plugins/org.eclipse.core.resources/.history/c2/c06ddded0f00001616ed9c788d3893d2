package com.cartographerapi.functions;

import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.DynamodbEvent;
import com.amazonaws.services.lambda.runtime.events.DynamodbEvent.DynamodbStreamRecord;
import com.amazonaws.regions.Region;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.dynamodbv2.model.AttributeValue;
import com.amazonaws.services.dynamodbv2.document.Item;
import com.amazonaws.services.dynamodbv2.document.internal.InternalUtils;
import java.util.Map;
import com.amazonaws.services.sns.AmazonSNSClient;
import com.amazonaws.services.sns.model.PublishRequest;
import com.amazonaws.services.sns.model.PublishResult;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.core.JsonProcessingException;;

public class PlayerGameCountPublisher implements RequestHandler<DynamodbEvent, Boolean> {

	private AmazonDynamoDBClient client;

    @Override
    public Boolean handleRequest(DynamodbEvent input, Context context) {
        context.getLogger().log("Input: " + input);

		client = new AmazonDynamoDBClient();
		client.setRegion(Region.getRegion(Regions.US_WEST_2));
        AmazonSNSClient snsClient = new AmazonSNSClient();		                           
        snsClient.setRegion(Region.getRegion(Regions.US_WEST_2));
        String topicArn = "arn:aws:sns:us-west-2:789201490085:dynamodb";
        ObjectMapper mapper = new ObjectMapper();

		for (DynamodbStreamRecord record : input.getRecords()) {
			if (record.getEventName() == "INSERT") {
				Map<String, AttributeValue> newData = record.getDynamodb().getNewImage();
				Item newItem = Item.fromMap(InternalUtils.toSimpleMapValue(newData));
				PublishRequest publishRequest = new PublishRequest(topicArn, mapper.writeValueAsString(input));
				PublishResult publishResult = snsClient.publish(publishRequest);
			}
		}
		
        return true;
    }

}
