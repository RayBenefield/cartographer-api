{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "Stage": {
            "Type": "String",
            "Default": "test",
            "Description": "The environment/stage for this stack."
        }
    },
    "Resources": {
        "CAPI": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "CAPI",
                "Description": "Capi test",
                "BodyS3Location": {
                    "Bucket": "cartographer-api-lambda-code",
                    "Key": "CapiSwagger.json"
                }
            }
        },
        "CapiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "Description": "Deployment of CAPI.",
                "RestApiId": { "Ref": "CAPI" },
                "StageName": { "Ref": "Stage" }
            }
        },
        "CapiKey": {
            "Type": "AWS::ApiGateway::ApiKey",
            "Properties": {
                "Description": "API Key for CAPI",
                "Enabled": true,
                "Name": "Capi Key",
                "StageKeys": [
                    {
                        "RestApiId": { "Ref": "CAPI" },
                        "StageName": { "Ref": "Stage" }
                    }
                ]
            }
        },
        "CapiToPlayerGameCountsGetter": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [ "PlayerGameCountsGetter", "CAPI" ],
            "Properties": {
                "Action": "lambda:*",
                "FunctionName": { "Fn::GetAtt": [ "PlayerGameCountsGetter", "Arn" ] },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [ ":", [
                        "arn:aws:execute-api",
                        { "Ref": "AWS::Region" },
                        { "Ref": "AWS::AccountId" },
                        { "Fn::Join": [ "", [
                            { "Ref": "CAPI" },
                            "/*/GET/player/*/game/count"
                        ] ] }
                    ] ]
                }
            }
        },
        "CapiToPlayerGameCountsUpdater": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [ "PlayerGameCountsUpdater", "CAPI" ],
            "Properties": {
                "Action": "lambda:*",
                "FunctionName": { "Fn::GetAtt": [ "PlayerGameCountsUpdater", "Arn" ] },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [ ":", [
                        "arn:aws:execute-api",
                        { "Ref": "AWS::Region" },
                        { "Ref": "AWS::AccountId" },
                        { "Fn::Join": [ "", [
                            { "Ref": "CAPI" },
                            "/*/POST/player/*/game/count"
                        ] ] }
                    ] ]
                }
            }
        },
        "CapiToPlayerGamesGetter": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:*",
                "FunctionName": { "Fn::GetAtt": [ "PlayerGamesGetter", "Arn" ] },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [ ":", [
                        "arn:aws:execute-api",
                        { "Ref": "AWS::Region" },
                        { "Ref": "AWS::AccountId" },
                        { "Fn::Join": [ "", [
                            { "Ref": "CAPI" },
                            "/*/GET/player/*/game"
                        ] ] }
                    ] ]
                }
            }
        },
        "CartographerApiLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::789201490085:policy/lambda_basic_execution_role_policy_7889af1c-44c9-4841-8228-b63a2a89050b",
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                    "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
                ]
            }
        },
        "DomainQueueFiller": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": "DomainQueueFiller",
                "Description": "Populate an SQS queue with all entries from a Domain table.",
                "Runtime": "java8",
                "Handler": "com.cartographerapi.functions.DomainQueueFiller",
                "Code": {
                    "S3Bucket": "cartographer-api-lambda-code",
                    "S3Key": "DomainQueueFiller-0.0.1-SNAPSHOT.jar"
                },
                "Role": { "Fn::GetAtt": ["CartographerApiLambdaRole", "Arn"] },
                "Timeout": "15",
                "MemorySize": "512"
            }
        },
        "SegmentScannerRequestContinue": {
            "Type": "AWS::SNS::Topic",
            "DependsOn": [ "SegmentScanner" ],
            "Properties": {
                "DisplayName": "SegmentScannerRequestContinue",
                "TopicName": "Capi-SegmentScannerRequest-Continue",
                "Subscription": [
                    {
                        "Endpoint": { "Ref": "SegmentScanner" },
                        "Protocol": "lambda"
                    }
                ]
            }
        },
        "SegmentScanner": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": "SegmentScanner",
                "Description": "Scan a segment of the Domain database until timeout or finished.",
                "Runtime": "java8",
                "Handler": "com.cartographerapi.functions.SegmentScanner",
                "Code": {
                    "S3Bucket": "cartographer-api-lambda-code",
                    "S3Key": "SegmentScanner-0.0.1-SNAPSHOT.jar"
                },
                "Role": { "Fn::GetAtt": ["CartographerApiLambdaRole", "Arn"] },
                "Timeout": "300",
                "MemorySize": "512"
            }
        }
    },
    "Outputs": {
        "ApiKey": {
            "Description": "The API Key for CAPI.",
            "Value": { "Ref": "CapiKey" }
        },
        "Url": {
            "Description": "Url for CAPI.",
            "Value": { "Fn::Join": [ "", [
                "https://",
                { "Ref": "CAPI" },
                ".execute-api.us-west-2.amazonaws.com/",
                { "Ref": "Stage" }
            ] ] }
        }
    }
}
