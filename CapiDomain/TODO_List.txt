*** Bonus TODO List ***

 1) Create a user library of the bare minimum requirements for CAPI lambda functions
 2) Explore the Context and check to see if there is a way to differentiate a test vs an actual execution
 3) Pull out the CAPI Wrapper into its own project
 4) Pull out the Halo 5 Wrapper into its own project
 5) Find a fix to the DynamoEvent test parsing
 6) Setup a system that updates all functions when the CAPI Domain is built
 7) Find fix for when a clean build unlinks the tst/ folder for projects
 8) Setup Unit Testing for all classes
 9) Move the PlayerGameCountsUpdater behind SNS
 10) Find a better way to dependency inject values from config.json at the Handler level
 11) Proper handling of the config.json file that allows for environment configs
 12) Create Templates:
 	 - Reader and Writer Repositories
 	 - Dynamo Domain Objects
 	 - Specific Repository types like SNS, Dynamo, etc.
 13) Create Snippets:
 	 - Import Packages like ObjectMapper, JsonNode, IOException
 	 - Basic ObjectMapper reading try/catch
 	 - Lazy IOC and Dependency Injection constructors
 	 - Dynamo Attribute/HashKey/RangeKey getters/setters
 14) Add Value Objects to Dynamo Domain Objects with proper marshaling/unmarshaling for "always valid" domain objects
 15) Implement Swagger, RAML, or API Blueprint for documentation generation and importing into API Gateway
 16) Script that automatically creates all SNS Topics, SQS Queues, API Endpoints, Dynamo Tables, and generates a local config.json
 17) Add Static CAPI Utilities to clean up messy Handler code
 	 - Different Utils for both Test and Sr code
 	 - Better logging that prints out pretty input objects in JSON
 	 - Extract messages out of SNS Events
 	 - Extract New, Update, Delete events out of a DynamoEvent
 	 - ObjectMapper that converts string into a JsonNode or returns an empty JsonNode
 18) Refactor ObjectWriters out of SnsWriters and redirect them to the generic objectWriters
 19) Refactor out the Configuration logic into ConfigReaders so I can create a new configuration data source in Dynamo
 20) Circumvent SNSEvent and convert them into domain objects by adding a setRecords(List<SNSRecord>) to domain objects since Lambda parses input out in a particular way
 21) Default all Lambda functions to accept a list of Domain objects and package single domain objects into a List when calling (like API Gateway endpoints)
 22) Use Maven to build dependencies for the projects to include minimum AWS SDK dependencies
 23) Maximize Lambda Executions for certain functions... loop through batches of messages from an SQS queue before completing