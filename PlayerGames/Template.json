{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "Stage": {
            "Type": "String",
            "Default": "test",
            "Description": "The environment stage."
        }
    },
    "Resources": {
        "CartographerApiLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::789201490085:policy/lambda_basic_execution_role_policy_7889af1c-44c9-4841-8228-b63a2a89050b",
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                    "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
                ]
            }
        },
        "PlayerGamesGetter": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [ "PlayerGames" ],
            "Properties": {
                "FunctionName": "PlayerGamesGetter",
                "Description": "Gets a full list of PlayerGames for a given gamertag.",
                "Runtime": "java8",
                "Handler": "com.cartographerapi.functions.PlayerGamesGetter",
                "Code": {
                    "S3Bucket": "cartographer-api-lambda-code",
                    "S3Key": "PlayerGamesGetter-0.0.1-SNAPSHOT.jar"
                },
                "Role": { "Fn::GetAtt": ["CartographerApiLambdaRole", "Arn"] },
                "Timeout": "15",
                "MemorySize": "512"
            }
        },
        "PlayerGameCountsForPlayerGames": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": "Capi-PlayerGameCountsForPlayerGames"
            }
        },
        "PlayerGameCountsForPlayerGamesPolicy": {
            "Type" : "AWS::SQS::QueuePolicy",
            "DependsOn": [ "PlayerGameCountsForPlayerGames" ],
            "Properties" : {
                "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": "SQS:*",
                            "Resource": { "Fn::GetAtt": [ "PlayerGameCountsForPlayerGames", "Arn" ] }
                        }
                    ]
                },
                "Queues" : [ { "Ref": "PlayerGameCountsForPlayerGames" } ]
            }
        },
        "PlayerGamesAdder": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [ "PlayerGames", "PlayerGamesCheckpoints" ],
            "Properties": {
                "FunctionName": "PlayerGamesAdder",
                "Description": "Adds new PlayerGames to the system.",
                "Runtime": "java8",
                "Handler": "com.cartographerapi.functions.PlayerGamesAdder",
                "Code": {
                    "S3Bucket": "cartographer-api-lambda-code",
                    "S3Key": "PlayerGamesAdder-0.0.1-SNAPSHOT.jar"
                },
                "Role": { "Fn::GetAtt": ["CartographerApiLambdaRole", "Arn"] },
                "Timeout": "15",
                "MemorySize": "512"
            }
        },
        "PlayerGameCountsContinue": {
            "Type": "AWS::SNS::Topic",
            "DependsOn": [ "PlayerGameCountsForPlayerGames" ],
            "Properties": {
                "DisplayName": "PlayerGameCountsContinue",
                "TopicName": "Capi-PlayerGameCounts-Continue",
                "Subscription": [
                    {
                        "Endpoint": { "Fn::GetAtt": [ "PlayerGameCountsForPlayerGames", "Arn" ] },
                        "Protocol": "sqs"
                    }
                ]
            }
        },
        "PlayerGamesCheckpoints": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": "PlayerGamesCheckpoints",
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "Gamertag",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "Gamertag",
                        "KeyType": "HASH"
                    }
                ]
            }
        },
        "PlayerGames": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": "PlayerGames",
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 4,
                    "WriteCapacityUnits": 4
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "Gamertag",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "GameNumber",
                        "AttributeType": "N"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "Gamertag",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "GameNumber",
                        "KeyType": "RANGE"
                    }
                ],
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                }
            }
        },
        "PlayerGamesPublisherStream": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [ "PlayerGames", "PlayerGamesPublisher" ],
            "Properties": {
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::GetAtt": [ "PlayerGames", "StreamArn" ]
                },
                "FunctionName": {
                    "Fn::GetAtt": [ "PlayerGamesPublisher", "Arn" ]
                },
                "StartingPosition": "LATEST"
            }
        },
        "PlayerGamesPublisher": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [ "CartographerApiLambdaRole" ],
            "Properties": {
                "FunctionName": "PlayerGamesPublisher",
                "Description": "Publish new PlayerGames found.",
                "Runtime": "java8",
                "Handler": "com.cartographerapi.functions.PlayerGamesPublisher",
                "Code": {
                    "S3Bucket": "cartographer-api-lambda-code",
                    "S3Key": "PlayerGamesPublisher-0.0.1-SNAPSHOT.jar"
                },
                "Role": { "Fn::GetAtt": ["CartographerApiLambdaRole", "Arn"] },
                "Timeout": "15",
                "MemorySize": "512"
            }
        },
        "PlayerGamesNew": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "DisplayName": "PlayerGamesNew",
                "TopicName": "Capi-PlayerGames-New",
                "Subscription": [
                ]
            }
        },
        "PlayersTotalGamesUpdated": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "DisplayName": "PlayersTotalGamesUpdated",
                "TopicName": "Capi-PlayerTotalGamesUpdated",
                "Subscription": [
                ]
            }
        }
    },
    "Outputs": {
        "QueuePlayerGameCountsForPlayerGames": {
            "Description": "Accepts PlayerGameCount jobs to be turned into PlayerGames.",
            "Value": { "Fn::GetAtt": [ "PlayerGameCountsForPlayerGames", "Arn" ] }
        },
        "TopicNewPlayerGames": {
            "Description": "New PlayerGames added to the system.",
            "Value": { "Ref": "PlayerGamesNew" }
        },
        "TopicPlayersTotalGamesUpdated": {
            "Description": "A Player's TotalGames has been updated.",
            "Value": { "Ref": "PlayersTotalGamesUpdated" }
        },
        "PlayerGamesGetterArn": {
            "Description": "The Arn for the PlayerGamesGetter.",
            "Value": { "Fn::GetAtt": [ "PlayerGamesGetter", "Arn" ] }
        },
        "PlayerGamesAdderArn": {
            "Description": "The Arn for the PlayerGamesAdder.",
            "Value": { "Fn::GetAtt": [ "PlayerGamesAdder", "Arn" ] }
        }
    }
}
